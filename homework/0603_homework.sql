-- 성적 처리 테이블 생성
CREATE TABLE SCORE(
    HAKBUN NUMBER(4) NOT NULL,
    HAKNAME VARCHAR2(20) NOT NULL,
    KOR NUMBER(4) NOT NULL,
    ENG NUMBER(4) NOT NULL,
    MAT NUMBER(4) NOT NULL,
    TOT NUMBER(4),
    AVG NUMBER(5,1),
    RANK NUMBER(4)
);

ALTER TABLE SCORE ADD CONSTRAINT SCORE_PK PRIMARY KEY (HAKBUN);

-- 테이블에 학번,이름,국어,영어,수학 점수를 입력하면 총점과 평균이 자동으로 계산되어 입력되도록 프로시저 작성
CREATE OR REPLACE PROCEDURE SUNG_INPUT(
    VHAKBUN SCORE.HAKBUN%TYPE, 
    VHAKNAME SCORE.HAKNAME%TYPE, 
    VKOR SCORE.KOR%TYPE, 
    VENG SCORE.ENG%TYPE, 
    VMAT SCORE.MAT%TYPE
)
IS
    VTOT SCORE.TOT%TYPE;
    VAVG SCORE.AVG%TYPE;
BEGIN
    VTOT := VKOR + VENG + VMAT;
    VAVG := VTOT / 3;
    
    INSERT INTO SCORE VALUES(VHAKBUN, VHAKNAME, VKOR, VENG, VMAT, VTOT, VAVG, NULL); 
END;
/

EXECUTE SUNG_INPUT(1,'GILDONG',100,100,100);

-- 테이블에 학번, 이름, 국어, 영어, 수학 점수를 입력하면 총점과 평균이 자동계산 되도록 트리거 작성
CREATE OR REPLACE TRIGGER SUNG_TRG
BEFORE INSERT ON SCORE
FOR EACH ROW
BEGIN
    :NEW.TOT := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVG := :NEW.TOT / 3 ;
END;
/

INSERT INTO SCORE(HAKBUN, HAKNAME, KOR, ENG, MAT) VALUES(2,'LEEGILDONG',90,90,90);

-- 등수를 구하는 저장프로시저 작성
CREATE OR REPLACE PROCEDURE SUNG_RANK
IS
    VHAKBUN SCORE.HAKBUN%TYPE;
    VRANK SCORE.RANK%TYPE;
    CURSOR C IS
    SELECT HAKBUN, RANK() OVER (ORDER BY TOT DESC) AS RANK FROM SCORE;
BEGIN
    OPEN C;
    LOOP
        FETCH C INTO VHAKBUN, VRANK;
        UPDATE SCORE SET RANK = VRANK WHERE HAKBUN = VHAKBUN;
        EXIT WHEN C%NOTFOUND;
    END LOOP;
END;
/

EXECUTE SUNG_RANK;

SELECT * FROM SCORE;






