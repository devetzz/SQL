-- 내림차순 정렬된 순위 설정하기 RANK(), DENSE_RANK()
SELECT ROWNUM, FIRST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT ROWNUM, FIRST_NAME, SALARY FROM (SELECT ROWNUM, FIRST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC) WHERE ROWNUM < 10;

SELECT FIRST_NAME, SALARY, RANK() OVER (ORDER BY SALARY DESC) RANK, DENSE_RANK() OVER (ORDER BY SALARY DESC) DENSE_RANK FROM EMPLOYEES ORDER BY SALARY DESC;

-- 내림차순 정렬된 두 컬럼을 기준으로 순위 설정하기 RANK(), DENSE_RANK()
SELECT FIRST_NAME
    , SALARY
    , commission_pct
    , RANK() OVER (ORDER BY SALARY DESC, COMMISSION_PCT DESC) RANK
    , DENSE_RANK() OVER (ORDER BY SALARY DESC, COMMISSION_PCT DESC) DENSE_RANK
FROM EMPLOYEES ORDER BY SALARY DESC;


SELECT FIRST_NAME
    , SALARY
    , COMMISSION_PCT
    , DEPARTMENT_ID
    , RANK() OVER (PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC, COMMISSION_PCT DESC) RANK
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID, SALARY DESC, COMMISSION_PCT DESC;

-- 그룹별 최대값 SALARY, 최소값 SALARY
SELECT FIRST_NAME
    , SALARY
    , DEPARTMENT_ID
    , MIN(SALARY) KEEP(DENSE_RANK FIRST ORDER BY SALARY) OVER(PARTITION BY DEPARTMENT_ID) SAL_MIN
    , MAX(SALARY) KEEP(DENSE_RANK LAST ORDER BY SALARY) OVER(PARTITION BY DEPARTMENT_ID) SAL_MAX
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID, SALARY DESC;

-- PAGING 처리 , 입사한 날짜별로 정렬하되, 한페이지당 10개씩 출력
SELECT ROWNUM, K.* FROM (SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC) K WHERE ROWNUM BETWEEN 31 AND 40;
SELECT * FROM (SELECT ROWNUM RNUM, K.* FROM (SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC) K WHERE ROWNUM <= 40) WHERE RNUM >= 31;


SELECT ROWNUM, K.* FROM (SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC) K
WHERE ROWNUM BETWEEN 31 AND 40;

SELECT * 
FROM (SELECT K.*, ROWNUM AS RN 
    FROM (SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC) K 
    WHERE ROWNUM <= 40)
WHERE RN >= 31;


